name: $(Build.DefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  batch: false
  branches:
    include:
      - main

pool:
  vmImage: windows-latest

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: 'BuildStage'
        displayName: Build
        variables:
          solution: 'WebAPI.sln'
          buildPlatform: 'Any CPU'
          buildConfiguration: 'Release'
          projectName: 'WebAPI'

        steps:
        - task: NuGetCommand@2
          displayName: Restore Solution Packages
          inputs:
            command: 'restore'
            restoreSolution: $(solution)
            feedsToUse: 'config'
            nugetConfigPath: Nuget.config

        - task: VSBuild@1
          displayName: 'Build $(projectName)'
          inputs:
            solution: 'WebAPI\WebAPI.csproj'
            msbuildArgs: '/p:Configuration=$(buildConfiguration) /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:OutputPath="$(build.artifactstagingdirectory)\\" /p:autoparameterizationwebconfigconnectionstrings=false'

        - task: ArchiveFiles@2
          displayName: Zip Build Artifacts
          inputs:
            rootFolderOrFile: WebAPI\obj\$(buildConfiguration)\Package\PackageTmp
            includeRootFolder: false
            archiveFile: $(build.artifactstagingdirectory)/$(Build.BuildNumber).zip

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Web API'
          inputs:
            PathtoPublish: '$(build.artifactstagingdirectory)/$(Build.BuildNumber).zip'
            ArtifactName: 'drop'

  - stage: test
    displayName: Deploy to Test Environment
    variables:
      - name: Environment
        value: Test
    jobs:
      - deployment: DeployAngularWebApplication
        displayName: Deploy Angular Web Application
        environment:
          name: 'Test'
          resourceType: VirtualMachine
          tags: 'web-api'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: ExtractFiles@1
                  displayName: Unzip Deployment Payload
                  inputs:
                    archiveFilePatterns: '$(Agent.BuildDirectory)\drop\$(Build.BuildNumber).zip'
                    destinationFolder: '$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)'

                # - task: FileTransform@2
                #   enabled: false
                #   displayName: 'Transform Web configuration for $(buildConfiguration)'
                #   inputs:
                #     folderPath: '$(build.artifactstagingdirectory)/**/*.zip'
                #     xmlTransformationRules: '-transform **\Web.$(buildConfiguration).config -xml **\Web.config'

                - task: IISWebAppManagementOnMachineGroup@0
                  displayName: IIS Web Application Manage
                  inputs:
                    IISDeploymentType: 'IISWebsite'
                    ActionIISWebsite: 'CreateOrUpdateWebsite'
                    ActionIISApplicationPool: 'CreateOrUpdateAppPool'
                    WebsiteName: Default Web Site
                    PipeLineMode: Integrated
                    PhysicalPathForVd: '%SystemDrive%\Code\ServerIIS'

                - task: IISWebAppDeploymentOnMachineGroup@0
                  inputs:
                    WebsiteName: Default Web Site
                    VirtualApplication: webapi
                    Package: '$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)\'

                - task: PowerShell@2
                  displayName: Apply Retention Policy
                  inputs:
                    targetType: inline
                    script: |
                      Remove-Item '$(Agent.BuildDirectory)\drop\$(Build.BuildNumber).zip' -Force -Recurse;
                      Remove-Item '$(Agent.BuildDirectory)\drop\$(Build.BuildNumber)' -Force -Recurse;
